// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeoMoto.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NeoMoto.Infrastructure.Migrations
{
    [DbContext(typeof(NeoMotoDbContext))]
    partial class NeoMotoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NeoMoto.Domain.Entities.Filial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.ToTable("Filiais");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2229f345-08ad-488a-93ac-8fddf55bdb5a"),
                            Cidade = "São Paulo",
                            Endereco = "Rua A, 100",
                            Nome = "Filial Centro",
                            Uf = "SP"
                        },
                        new
                        {
                            Id = new Guid("6b9b2638-ea78-45f3-ae69-c73e749a3792"),
                            Cidade = "São Paulo",
                            Endereco = "Av. B, 200",
                            Nome = "Filial Zona Sul",
                            Uf = "SP"
                        });
                });

            modelBuilder.Entity("NeoMoto.Domain.Entities.Manutencao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Custo")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("MotoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.ToTable("Manutencoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0626348f-c301-4f41-bf6e-bfbdfaf5b29f"),
                            Custo = 120m,
                            Data = new DateTime(2025, 9, 14, 20, 20, 55, 614, DateTimeKind.Utc).AddTicks(8743),
                            Descricao = "Troca de óleo",
                            MotoId = new Guid("ba0c3d0c-de7a-4232-940e-6c195893d019")
                        },
                        new
                        {
                            Id = new Guid("9118890c-d96e-4e77-8670-5d14e9a1e4e0"),
                            Custo = 80m,
                            Data = new DateTime(2025, 9, 19, 20, 20, 55, 614, DateTimeKind.Utc).AddTicks(8755),
                            Descricao = "Ajuste de corrente",
                            MotoId = new Guid("ba0c3d0c-de7a-4232-940e-6c195893d019")
                        },
                        new
                        {
                            Id = new Guid("36276531-653f-46eb-9e4e-caa3089fd90e"),
                            Custo = 150m,
                            Data = new DateTime(2025, 9, 22, 20, 20, 55, 614, DateTimeKind.Utc).AddTicks(8760),
                            Descricao = "Pastilha de freio",
                            MotoId = new Guid("0d93b0f6-74e3-416a-b5da-cdb0a053ae2d")
                        });
                });

            modelBuilder.Entity("NeoMoto.Domain.Entities.Moto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<Guid>("FilialId")
                        .HasColumnType("uuid");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Motos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba0c3d0c-de7a-4232-940e-6c195893d019"),
                            Ano = 2022,
                            FilialId = new Guid("2229f345-08ad-488a-93ac-8fddf55bdb5a"),
                            Modelo = "Honda CG 160",
                            Placa = "ABC1D23"
                        },
                        new
                        {
                            Id = new Guid("826a3f70-7d44-4a03-ab8d-0e51283161ce"),
                            Ano = 2021,
                            FilialId = new Guid("2229f345-08ad-488a-93ac-8fddf55bdb5a"),
                            Modelo = "Yamaha Factor 150",
                            Placa = "EFG4H56"
                        },
                        new
                        {
                            Id = new Guid("0d93b0f6-74e3-416a-b5da-cdb0a053ae2d"),
                            Ano = 2020,
                            FilialId = new Guid("6b9b2638-ea78-45f3-ae69-c73e749a3792"),
                            Modelo = "Honda Biz 125",
                            Placa = "IJK7L89"
                        });
                });

            modelBuilder.Entity("NeoMoto.Domain.Entities.Manutencao", b =>
                {
                    b.HasOne("NeoMoto.Domain.Entities.Moto", "Moto")
                        .WithMany("Manutencoes")
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("NeoMoto.Domain.Entities.Moto", b =>
                {
                    b.HasOne("NeoMoto.Domain.Entities.Filial", "Filial")
                        .WithMany("Motos")
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("NeoMoto.Domain.Entities.Filial", b =>
                {
                    b.Navigation("Motos");
                });

            modelBuilder.Entity("NeoMoto.Domain.Entities.Moto", b =>
                {
                    b.Navigation("Manutencoes");
                });
#pragma warning restore 612, 618
        }
    }
}
